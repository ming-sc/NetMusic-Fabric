plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

//apply plugin: 'com.github.johnrengelman.shadow'

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

allprojects {
	repositories {
		maven {
			url 'https://maven.aliyun.com/repository/public/'
		}
		mavenLocal()
		mavenCentral()
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		// location of the maven that hosts JEI files since January 2023
		// Patchouli
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		name = "Curse Maven"
		url = "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
	maven {
		url 'https://m2.dv8tion.net/releases'
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"netmusic" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	implementation include("com.googlecode.soundlibs:mp3spi:1.9.5.4")
	implementation include("com.googlecode.soundlibs:jlayer:1.0.1.4")
	implementation include("com.googlecode.soundlibs:tritonus-share:0.3.7.4")
	implementation include("com.sedmelluq:lavaplayer:1.3.77")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation include("dev.isxander:yet-another-config-lib:3.5.0+1.20.1-fabric")
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

//shadowJar{
//	dependencies {
//		include(dependency("com.googlecode.soundlibs:mp3spi:1.9.5.4"))
//		include(dependency("com.googlecode.soundlibs:jlayer:1.0.1.4"))
//		include(dependency("com.googlecode.soundlibs:tritonus-share:0.3.7.4"))
//		include(dependency("dev.isxander:yet-another-config-lib:3.5.0+1.20.1-fabric"))
//	}
//
//	relocate 'javazoom.jl', 'com.github.tartaricacid.netmusic.soundlibs.javazoom.jl'
//	relocate 'javazoom.spi', 'com.github.tartaricacid.netmusic.soundlibs.javazoom.spi'
//	relocate 'org.tritonus', 'com.github.tartaricacid.netmusic.soundlibs.org.tritonus'
//
//	mergeServiceFiles()
//}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}